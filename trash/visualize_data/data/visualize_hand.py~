#!/usr/bin/env python3.8
import sys 
sys.path.append("/home/abml/zoe_ws/lib")
from mwy_lib import *


rospy.init_node('visualize_hand', anonymous=True)
hand_pc_pub = rospy.Publisher("/hand_pc_rob", PointCloud2, queue_size=1)
hand_average_depth_pub = rospy.Publisher("/hand_average_depth", PointStamped, queue_size=1)
#####################
image_num = 196
dataset_num = 1
member_num = 1
pose_num = 1
######################
path = '/home/abml/zoe_ws/src/handover/data/dataset_' + str(dataset_num) +'/member_' + str(member_num) + '/pose_' + str(pose_num) + '/hand_traj.txt'
hand = loadtxt(path)

for i in range(len(hand)):
  print('press enter')
  input()
  wrist_temp = hand[i][0:3]
  thumb_temp = hand[i][3:6]
  index_temp = hand[i][6:9]
  middle_temp = hand[i][9:12]
  ring_temp = hand[i][12:15]
  pinky_temp = hand[i][15:18]
  index_mcp_temp = hand[i][18:21]
  middle_mcp_temp = hand[i][21:24]
  ring_mcp_temp = hand[i][24:27]
  pinky_mcp_temp = hand[i][27:30]
  palm = hand[i][30:33]
  
  # generate pc
  r = 255
  g = 0
  b = 0
  a = 255
  rgb = struct.unpack('I', struct.pack('BBBB', b, g, r, a))[0]
  hand_pc = []
  for j in range(11):
    pt = list(hand[i][j*3 : (j+1)*3]) + [rgb]
    hand_pc.append(pt)
    
  HEADER = Header()
  HEADER.frame_id = 'map'
  FIELDS = [
    PointField('x', 0, PointField.FLOAT32, 1),
    PointField('y', 4, PointField.FLOAT32, 1),
    PointField('z', 8, PointField.FLOAT32, 1),
    PointField('rgb', 12, PointField.UINT32, 1),
  ]
  POINTS = hand_pc#listhand_pc
  outputPoints = point_cloud2.create_cloud(HEADER, FIELDS, POINTS)
  hand_pc_pub.publish(outputPoints)     
  
  
  '''
  hand_list.header.stamp = rospy.Time.now() 
  hand_list.wrist = give_Point(wrist_temp)
  hand_list.thumb_tip = give_Point(thumb_temp)
  hand_list.index_tip = give_Point(index_temp)
  hand_list.middle_tip = give_Point(middle_temp)
  hand_list.ring_tip = give_Point(ring_temp)
  hand_list.pinky_tip = give_Point(pinky_temp)
  hand_list.index_mcp = give_Point(index_mcp_temp)
  hand_list.middle_mcp = give_Point(middle_mcp_temp)
  hand_list.ring_mcp = give_Point(ring_mcp_temp)
  hand_list.pinky_mcp = give_Point(pinky_mcp_temp)
  hand_msg_pub.publish(hand_list)
  '''
  palm_pt = give_PointStamped('map', palm)
  hand_average_depth_pub.publish(palm_pt)



    
