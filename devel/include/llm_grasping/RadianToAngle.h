// Generated by gencpp from file llm_grasping/RadianToAngle.msg
// DO NOT EDIT!


#ifndef LLM_GRASPING_MESSAGE_RADIANTOANGLE_H
#define LLM_GRASPING_MESSAGE_RADIANTOANGLE_H

#include <ros/service_traits.h>


#include <llm_grasping/RadianToAngleRequest.h>
#include <llm_grasping/RadianToAngleResponse.h>


namespace llm_grasping
{

struct RadianToAngle
{

typedef RadianToAngleRequest Request;
typedef RadianToAngleResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct RadianToAngle
} // namespace llm_grasping


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::llm_grasping::RadianToAngle > {
  static const char* value()
  {
    return "8dd47fc5494973709ed579a85c77ce44";
  }

  static const char* value(const ::llm_grasping::RadianToAngle&) { return value(); }
};

template<>
struct DataType< ::llm_grasping::RadianToAngle > {
  static const char* value()
  {
    return "llm_grasping/RadianToAngle";
  }

  static const char* value(const ::llm_grasping::RadianToAngle&) { return value(); }
};


// service_traits::MD5Sum< ::llm_grasping::RadianToAngleRequest> should match
// service_traits::MD5Sum< ::llm_grasping::RadianToAngle >
template<>
struct MD5Sum< ::llm_grasping::RadianToAngleRequest>
{
  static const char* value()
  {
    return MD5Sum< ::llm_grasping::RadianToAngle >::value();
  }
  static const char* value(const ::llm_grasping::RadianToAngleRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::llm_grasping::RadianToAngleRequest> should match
// service_traits::DataType< ::llm_grasping::RadianToAngle >
template<>
struct DataType< ::llm_grasping::RadianToAngleRequest>
{
  static const char* value()
  {
    return DataType< ::llm_grasping::RadianToAngle >::value();
  }
  static const char* value(const ::llm_grasping::RadianToAngleRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::llm_grasping::RadianToAngleResponse> should match
// service_traits::MD5Sum< ::llm_grasping::RadianToAngle >
template<>
struct MD5Sum< ::llm_grasping::RadianToAngleResponse>
{
  static const char* value()
  {
    return MD5Sum< ::llm_grasping::RadianToAngle >::value();
  }
  static const char* value(const ::llm_grasping::RadianToAngleResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::llm_grasping::RadianToAngleResponse> should match
// service_traits::DataType< ::llm_grasping::RadianToAngle >
template<>
struct DataType< ::llm_grasping::RadianToAngleResponse>
{
  static const char* value()
  {
    return DataType< ::llm_grasping::RadianToAngle >::value();
  }
  static const char* value(const ::llm_grasping::RadianToAngleResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // LLM_GRASPING_MESSAGE_RADIANTOANGLE_H
